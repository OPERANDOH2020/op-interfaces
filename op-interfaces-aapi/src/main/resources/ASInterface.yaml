# OPERANDO YAML Based on Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping (which use to be a nightmare).
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
 title: 'eu.operando.interfaces.aapi'
 description: 'Operandos AS interfaces'
 contact:
  name: 'Constantinos Patsakis'
  url: ''
  email: 'kpatsak@gmail.com'
 license:
  name: MIT
  url: http://opensource.org/licenses/MIT
 version: "0.0.1"
host: 'localhost:8080'
basePath: '/operando/interfaces/authentication'
schemes:
 - https
paths:
 /aapi/tickets:
  post:
   summary: '
   This operation makes a request for a ticket granting ticket (TGT) to the AAPI,
   which is the session key for the application SSO session.
   This operation should be called the very first time for an application to be authenticated 
   to OPERANDOs CAS server, through a login form.'
   description: 'Login to AS and issue a session ticket (tgt)'
   parameters:
    - name: userCredential 
      in: body
      description: 'Users username, password'
      required: true
      schema:
       $ref: '#/definitions/UserCredential'
   responses:
    '201':
     description: 'ticket granting ticket (TGT) created'
     schema:
      type: 'string'
    '400':
     description: 'Unable to create a ticket granting ticket (TGT)'
    '500':
     description: 'Internal Server Error'
     
 /aapi/tickets/{tgt}:
  post:
   summary: '
   This operation makes a request for a service ticket (ST) to the AAPI,
   which is the authorization ticket for a specific protected service of OPERANDOs system.
   This operation should be called each time the user tried to access a protected service'
   description: 'Request a service ticket (ST) for the service with id serviceId'
   parameters:
    - name: tgt
      in: path
      description: 'Users session ticket (TGT)'
      required: true
      type: 'string'
    - name: serviceId
      in: body
      description: 'Services endpoint'
      required: true
      schema: 
       type: 'string'
   responses: 
    '201': 
     description: 'service ticket (ST) created'
     schema: 
      type: string
    '400': 
     description: 'Unable to create a service ticket (ST)'
    '500': 
     description: 'Internal Server Error'
     
 /aapi/tickets/{st}/validate:
  get:
   summary: ''
   description: 'Validate the service ticket (ST)'
   parameters:
    - name: st
      in: path
      description: service ticket (ST)
      required: true
      type: string
    - name: serviceId
      in: query
      description: service identifier
      required: true
      type: string
   responses:
    '200':
     description: 'service ticket (ST) is valid'
    '400':
     description: 'service ticket (ST) is invalid'
    '500':
     description: 'Internal Server Error'
     
 /aapi/user/register:
  post:
   summary: 'This operation registers a user to OPERANDOs platform.'
   description: 'This operation registers a user to OPERANDOs platform.'
   parameters:
    - name: user 
      in: body
      description: 'User description'
      required: true
      schema:
       $ref: '#/definitions/User'
   responses:
    '201':
     description: 'User created'
     schema:
      $ref: '#/definitions/User'
    '500':
     description: 'Internal Server Error'
     
 /user/{username}:
   get:
    summary: 'This operation returns the OPERANDOs registed user with given username'
    description: 'This operation returns the OPERANDOs registed user with given username'
    parameters:
     - name: username 
       in: path
       description: 'Users username'
       required: true
       type: string
    responses:
     '200':
      description: 'User returned'
      schema:
       $ref: '#/definitions/User'
     '404':
      description: 'User not found'
     '500':
      description: 'Internal Server Error'
   put:
    summary: ''
    description: 'Updates the content of ASs registed user with corresponding username'
    parameters:
     - name: username 
       in: path
       description: 'Users username'
       required: true
       type: string
     - name: user 
       in: body
       description: 'Users data'
       required: true
       schema:
        $ref: '#/definitions/User'
    responses:
     '202':
      description: 'User updated'
      schema:
       $ref: '#/definitions/User'
     '404':
      description: 'User not found'
     '500':
      description: 'Internal Server Error'
   delete:
    summary: ''
    description: 'Delete ASs registed user with corresponding username'
    parameters:
     - name: username 
       in: path
       description: 'Users username'
       required: true
       type: string
    responses:
     '202':
      description: 'User deleted'
      schema:
       $ref: '#/definitions/User'
     '404':
      description: 'User not found'
     '500':
      description: 'Internal Server Error'
      
definitions:
  User:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      required_attrs:
        type: object
        items:
          $ref: '#/definitions/Attribute'
      optional_attrs:
        type: object
        items:
          $ref: '#/definitions/Attribute'
      privacy_settings:
        type: object
        items:
          $ref: '#/definitions/Attribute'
  Attribute:
    type: object
    properties:
      attr_name:
        type: string
      attr_value:
        type: string
  UserCredential:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
        